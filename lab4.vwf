/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000000.0;
	SIMULATION_TIME = 100000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LED_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 400000;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
		}
	}
}

TRANSITION_LIST("rst_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1114240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 98885520.0;
	}
}

TRANSITION_LIST("LED_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		NODE
		{
			REPEAT = 278;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 500.0;
		NODE
		{
			REPEAT = 24721;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
		LEVEL 0 FOR 1625.0;
	}
}

TRANSITION_LIST("LED_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3875.0;
		NODE
		{
			REPEAT = 138;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 4000.0;
		}
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 6500.0;
		NODE
		{
			REPEAT = 12360;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 4000.0;
		}
		LEVEL 1 FOR 1625.0;
	}
}

TRANSITION_LIST("LED_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7875.0;
		NODE
		{
			REPEAT = 69;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 2500.0;
		NODE
		{
			REPEAT = 6180;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 5625.0;
	}
}

TRANSITION_LIST("LED_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15875.0;
		NODE
		{
			REPEAT = 34;
			LEVEL 1 FOR 16000.0;
			LEVEL 0 FOR 16000.0;
		}
		LEVEL 1 FOR 10500.0;
		NODE
		{
			REPEAT = 3090;
			LEVEL 0 FOR 16000.0;
			LEVEL 1 FOR 16000.0;
		}
		LEVEL 0 FOR 5625.0;
	}
}

TRANSITION_LIST("LED_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33882375.0;
		LEVEL 1 FOR 32768000.0;
		LEVEL 0 FOR 32768000.0;
		LEVEL 1 FOR 581625.0;
	}
}

TRANSITION_LIST("LED_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66650375.0;
		LEVEL 1 FOR 33349625.0;
	}
}

TRANSITION_LIST("LED_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("LED_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rst_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 3300;
	MASTER = TRUE;
}
;
